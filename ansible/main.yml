
- hosts: app
  become: yes
  vars:
    LOCAL_PROJECT_HOME: "./app"
    PROJECT_HOME: "/app"
    MAIN_PY: "app.py"
    PORT: 80

  tasks:

  - name: Create remote directory
    file: path={{PROJECT_HOME}} state=directory

  - name: Copy project code to website server
    copy: src={{item}} dest={{PROJECT_HOME}}
    with_fileglob:
     - "{{LOCAL_PROJECT_HOME}}/*"

  #- name: Install extra packages
  #  apt: name=epel-release state=latest
  #  sudo: yes

  #- name: Install lsof (for better process management)
  #  apt: name=lsof state=latest
  #  sudo: yes
  - name: Install python3
    apt: 
       name: python3
       state: latest

  - name : Install setup-tools
    apt:
       name: python3-setuptools
       state: latest
  - name: Install pip3
    apt: 
       name: python3-pip 
       state: latest
       update_cache: yes

  #- name: Install virtualenv
  #  pip: 
  #     name: virtualenv
    

  #- name: Create virtualenv for project
  #  shell: virtualenv "{{ PROJECT_HOME }}/venv"
           creates="{{ PROJECT_HOME }}/venv/bin/activate"

  - name: Install Flask in the virtualenv
    pip: name=flask #virtualenv="{{ PROJECT_HOME }}/venv" # virtualenv_site_packages=yes

  #- name: Get process id running the webserver
  #  shell: lsof -t -i:{{PORT}}    
  #  ignore_errors: yes
  #  register: pid

  #- name: Kill website if it's already running
  #  shell: kill {{pid.stdout}}
  #  when: pid.stdout != ""


 # - name: Launch flask website via virtualenv
 #   shell: "source {{ PROJECT_HOME }}/venv/bin/activate; nohup python {{PROJECT_HOME}}/{{MAIN_PY}} {{PORT}} 2>&1 >/dev/null &"
  - name: Launch flask
    shell: "python3 {{PROJECT_HOME}}/{{MAIN_PY}} {{PORT}} 2>&1 >/dev/null &" 

  - name: Wait for website port to become available
    wait_for: port={{PORT}} delay=1